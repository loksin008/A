#!/bin/bash

# Define colors
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
MAGENTA="\033[35m"
CYAN="\033[36m"
RESET="\033[0m"
BLINK="\033[5m"

# Function to display time with a blinking border
display_time() {
  # Get terminal size
  rows=$(tput lines)
  cols=$(tput cols)

  # Get current time
  current_time=$(date +"%T")

  # Select random color for the time
  color=$((RANDOM % 6))
  case $color in
    0) COLOR=$RED ;;
    1) COLOR=$GREEN ;;
    2) COLOR=$YELLOW ;;
    3) COLOR=$BLUE ;;
    4) COLOR=$MAGENTA ;;
    5) COLOR=$CYAN ;;
  esac

  # Calculate where to place the clock (centered)
  start_row=$((rows / 2))
  start_col=$(( (cols - ${#current_time}) / 2 ))

  # Create a blinking border using ANSI escape codes
  border_top=$(printf "%-${cols}s" " " | tr " " "-")
  border_bottom=$(printf "%-${cols}s" " " | tr " " "-")
  border_left=$(printf "%-${rows}s" " " | tr " " "|")
  border_right=$(printf "%-${rows}s" " " | tr " " "|")

  # Print the blinking border (top and bottom)
  echo -e "${BLINK}${border_top}${RESET}"
  
  # Print each row with left and right borders, including the centered time
  for ((i=1; i<rows-1; i++)); do
    if [[ $i == $start_row ]]; then
      # Center the time with a border on the left and right
      printf "%-${start_col}s${COLOR}${current_time}${RESET}%-$((cols-start_col-${#current_time}))s\n"
    else
      # Empty rows with borders
      printf "|%-$((cols-2))s|\n"
    fi
  done

  # Print the blinking border (bottom)
  echo -e "${BLINK}${border_bottom}${RESET}"
}

# Infinite loop to update the time every second
while true; do
  clear
  display_time
  sleep 1
done
